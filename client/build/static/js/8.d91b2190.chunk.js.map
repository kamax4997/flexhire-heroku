{"version":3,"sources":["app/hooks/useGraphql.tsx","app/components/SkillItem.tsx","assets/video/4k.mp4","app/components/VideoCard.tsx","app/pages/profile/index.tsx"],"names":["useGraphql","dispatch","useDispatch","useSelector","state","dashboard","currentUser","contracts","setGraphqlData","params","SkillItem","props","skill","exp","className","VideoCard","Card","width","height","src","videoUrl","type","kind","label","Profile","useState","index","setIndex","loading","handleChangeIndex","useCallback","event","value","verifyBadge","useMemo","VerifiedUser","skillsMemo","userSkills","map","userSkill","name","experience","id","profileMemo","Grid","container","item","sm","xs","timezone","Avatar","avatarUrl","firstName","lastName","profile","freelancerType","totalExperience","textIntroduction","Tabs","onChange","indicatorColor","textColor","variant","Tab"],"mappings":"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","file":"static/js/8.d91b2190.chunk.js","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { setGraphqlData } from 'utils/redux/slices/dashboard';\nimport { IRootState } from 'utils/redux/store';\nimport { IGraphql } from 'utils/types';\n\n// eslint-disable-next-line\nconst useGraphql = () => {\n  const dispatch = useDispatch();\n\n  const {\n    currentUser, contracts,\n  } = useSelector(\n    (state: IRootState) => state.dashboard,\n  );\n\n  return {\n    currentUser,\n    contracts,\n\n    setGraphqlData: (params: IGraphql) => dispatch(\n      setGraphqlData({\n        currentUser: params.currentUser,\n        contracts: params.contracts,\n      }),\n    ),\n  };\n};\n\nexport default useGraphql;\n","import React from 'react';\n\ntype skillItemProps = {\n    skill: string,\n    exp: number\n}\n\nconst SkillItem: React.FC<skillItemProps> = (props: skillItemProps) => {\n  const { skill, exp } = props;\n\n  return (\n    <div className=\"skill-item-div\">\n      <span>{skill}</span>\n      <span>\n        {exp}\n        + years\n      </span>\n    </div>\n  );\n};\n\nexport default SkillItem;\n","export default __webpack_public_path__ + \"static/media/4k.98a005df.mp4\";","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport videoUrl from '../../assets/video/4k.mp4';\n\nconst VideoCard: React.FC = () => (\n  <Card className=\"video-card\">\n    <video width=\"400\" height=\"200\">\n      <source src={videoUrl} type=\"video/mp4\" />\n      <track src=\"captions_en.vtt\" kind=\"captions\" label=\"english_captions\" />\n      <track src=\"captions_es.vtt\" kind=\"captions\" label=\"spanish_captions\" />\n    </video>\n    <p>video</p>\n  </Card>\n);\n\nexport default VideoCard;\n","import React, {\n  useMemo, useState, useCallback,\n} from 'react';\nimport {\n  Grid, Avatar, Tab, Tabs,\n} from '@material-ui/core';\nimport { VerifiedUser } from '@material-ui/icons';\nimport SkillItem from 'app/components/SkillItem';\nimport VideoCard from 'app/components/VideoCard';\nimport { IUserSkill } from 'utils/types';\nimport useGraphql from 'app/hooks/useGraphql';\n\nconst Profile: React.FC = () => {\n  const { currentUser } = useGraphql();\n  const [index, setIndex] = useState(0);\n  // eslint-disable-next-line\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleChangeIndex = useCallback((event, value) => {\n    setIndex(value);\n  }, [setIndex]);\n\n  const verifyBadge = useMemo(() => (\n    <div className=\"d-flex verified-badge\">\n      <VerifiedUser />\n      {' '}\n      Verified\n    </div>\n  ), []);\n\n  const skillsMemo = useMemo(() => currentUser && currentUser.userSkills.map(\n    (userSkill: IUserSkill) => (\n      <SkillItem key={userSkill.skill.id} skill={userSkill.skill.name} exp={userSkill.experience} />\n    ),\n  ), [currentUser]);\n\n  const profileMemo = useMemo(() => {\n    if (loading) {\n      return (\n        <div className=\"profile-loading-container\">\n          <div>\n            <h3>Please Wait</h3>\n            <p>Loading your profile...</p>\n          </div>\n        </div>\n      );\n    }\n    return currentUser && (\n    <div className=\"profile-container\">\n      <div className=\"profile-top-block\">\n        <Grid container>\n          <Grid item sm={4} xs={12} className=\"verify-tag-block\">\n            {verifyBadge}\n            <p className=\"time-zone-text\">{currentUser.timezone}</p>\n          </Grid>\n          <Grid item sm={4} xs={12} className=\"d-flex justify-center\">\n            <Avatar src={currentUser.avatarUrl} className=\"profile-avatar\" />\n          </Grid>\n          <Grid item sm={4} xs={12} />\n        </Grid>\n        <div>\n          <h3 className=\"user-name\">\n            {currentUser.firstName}\n            {' '}\n            {currentUser.lastName}\n            {' '}\n            -\n            {' '}\n            {currentUser.profile.freelancerType.name}\n            {' '}\n          </h3>\n          <h3 className=\"user-experience\">\n            {currentUser.profile.totalExperience}\n            {' '}\n            Years Experience\n          </h3>\n        </div>\n        <div className=\"d-flex justify-center flex-wrap\">\n          {/* {subTypesMemo} */}\n        </div>\n        <p className=\"profile-introduction-text\">{currentUser.profile.textIntroduction}</p>\n        <div className=\"skills-content\">\n          {skillsMemo}\n        </div>\n      </div>\n\n      <hr />\n      <div className=\"vidoes-content\">\n        <Tabs\n          value={index}\n          onChange={handleChangeIndex}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          className=\"tabs-container\"\n        >\n          <Tab label=\"Video Answers\" />\n          <Tab label=\"Work & Education\" />\n        </Tabs>\n        {\n            index === 0 && (\n            <div className=\"video-answers-content\">\n              <Grid container>\n                <Grid item sm={6} xs={12}>\n                  <VideoCard />\n                </Grid>\n                <Grid item sm={6} xs={12}>\n                  <VideoCard />\n                </Grid>\n              </Grid>\n            </div>\n            )\n        }\n        {\n            index === 1 && (\n            <div className=\"work-education-content\">\n                {/* {workEducationMemo} */}\n            </div>\n            )\n        }\n      </div>\n    </div>\n    );\n  }, [currentUser, index, handleChangeIndex, skillsMemo,\n    verifyBadge, loading]);\n\n  return (\n    <div className=\"home-container\">\n      <Grid container>\n        <Grid item sm={2} xs={1} />\n        <Grid item sm={8} xs={10}>\n          {profileMemo}\n        </Grid>\n        <Grid item sm={2} xs={1} />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}